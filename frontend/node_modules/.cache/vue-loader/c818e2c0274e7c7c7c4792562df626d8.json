{"remainingRequest":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\src\\views\\Home.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\src\\views\\Home.vue","mtime":1604086090519},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXV0aG9yLW5hbWV7CiAgZm9udC13ZWlnaDogYm9sZDsKICBjb2xvcjogI0RDMzU0NTsKfQoKLnF1ZXN0aW9uLWxpbmt7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgY29sb3I6IGJsYWNrOwp9CgoucXVlc3Rpb24tbGluazogaG92ZXIgewogIGNvbG9yOiAjMzQzQTQwOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsKfQoK"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkDA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"home\">\n    <div class=\"container\">\n      <div v-for=\"question in questions\"\n                :key=\"question.pk\">\n          <p class=\"mb-0\"> posted by:\n            <span class=\"author-name\"> {{ question.author }} </span>\n          </p>\n          <h2>\n            <router-link\n                  :to=\"{ name:'question', params: { slug: question.slug }  }\"\n                  class=\"question-link\"  >\n              {{ question.content }}\n            </router-link>\n          </h2>\n          <p> Answers: {{ question.answer_count }} </p>\n          <hr>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n<script>\nimport { apiService } from \"../common/api.service.js\"\nexport default {\n  name: \"home\",\n  data () {\n    return {\n      questions: []\n    }\n  },\n  methods: {\n    getQuestions() {\n      let endpoint = \"api/questions/\";\n      apiService(endpoint)\n        .then(data => {\n          this.questions.push(...data.results)\n        })\n    }\n  },\n  created(){\n    this.getQuestions()\n    // console.log(this.questions)\n  }\n};\n</script>\n\n\n<style>\n.author-name{\n  font-weigh: bold;\n  color: #DC3545;\n}\n\n.question-link{\n  font-weight: bold;\n  color: black;\n}\n\n.question-link: hover {\n  color: #343A40;\n  text-decoration: none;\n}\n\n</style>\n"]}]}
{"remainingRequest":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\thread-loader\\dist\\cjs.js!D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\src\\views\\QuestionEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\src\\views\\QuestionEditor.vue","mtime":1604159538743},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Shaurov\\rest projects\\rest_course\\QuestionTime\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovU2hhdXJvdi9yZXN0IHByb2plY3RzL3Jlc3RfY291cnNlL1F1ZXN0aW9uVGltZS9mcm9udGVuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGFwaVNlcnZpY2UgfSBmcm9tICJAL2NvbW1vbi9hcGkuc2VydmljZS5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUXVlc3Rpb25FZGl0b3IiLAogIHByb3BzOiB7CiAgICBzbHVnOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBxdWVzdGlvbl9ib2R5OiBudWxsLAogICAgICBlcnJvcjogbnVsbAogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIG9uU3VibWl0OiBmdW5jdGlvbiBvblN1Ym1pdCgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5xdWVzdGlvbl9ib2R5KSB7CiAgICAgICAgdGhpcy5lcnJvciA9ICJZb3UgY2FuJ3Qgc2VuZCBhbiBlbXB0eSBxdWVzdGlvbiEiOwogICAgICB9IGVsc2UgaWYgKHRoaXMucXVlc3Rpb25fYm9keS5sZW5ndGggPiAyNDApIHsKICAgICAgICB0aGlzLmVycm9yID0gIkVuc3VyZSB0aGlzIGZpZWxkIGhhcyBubyBtb3JlIHRoYW4gMjQwIGNoYXJhY3RlcnMhIjsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgZW5kcG9pbnQgPSAiL2FwaS9xdWVzdGlvbnMvIjsKICAgICAgICB2YXIgbWV0aG9kID0gIlBPU1QiOwoKICAgICAgICBpZiAodGhpcy5zbHVnICE9PSB1bmRlZmluZWQpIHsKICAgICAgICAgIGVuZHBvaW50ICs9ICIiLmNvbmNhdCh0aGlzLnNsdWcsICIvIik7CiAgICAgICAgfQoKICAgICAgICBhcGlTZXJ2aWNlKGVuZHBvaW50LCBtZXRob2QsIHsKICAgICAgICAgIGNvbnRlbnQ6IHRoaXMucXVlc3Rpb25fYm9keQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHF1ZXN0aW9uX2RhdGEpIHsKICAgICAgICAgIF90aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgICAgIG5hbWU6ICdxdWVzdGlvbicsCiAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgIHNsdWc6IHF1ZXN0aW9uX2RhdGEuc2x1ZwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfQogICAgfQogIH0sCiAgYmVmb3JlUm91dGVFbnRlcjogZnVuY3Rpb24gYmVmb3JlUm91dGVFbnRlcih0bywgZnJvbSwgbmV4dCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGVuZHBvaW50LCBkYXRhOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKCEodG8ucGFyYW1zLnNsdWcgIT09IHVuZGVmaW5lZCkpIHsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBlbmRwb2ludCA9ICIvYXBpL3F1ZXN0aW9ucy8iLmNvbmNhdCh0by5wYXJhbXMuc2x1ZywgIi8iKTsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXBpU2VydmljZShlbmRwb2ludCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgbmV4dChmdW5jdGlvbiAodm0pIHsKICAgICAgICAgICAgICAgIHZtLnF1ZXN0aW9uX2JvZHkgPSBkYXRhLmNvbnRlbnQ7CiAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIG5leHQoKSk7CgogICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgZG9jdW1lbnQudGl0bGUgPSAiRWRpdG9yIC0gUXVlc3Rpb25UaW1lIjsKICB9Cn07"},{"version":3,"sources":["QuestionEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,SAAA,UAAA,QAAA,yBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,KAAA,EAAA;AAFA,KAAA;AAIA,GAdA;AAgBA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AAAA;;AACA,UAAA,CAAA,KAAA,aAAA,EAAA;AACA,aAAA,KAAA,GAAA,mCAAA;AACA,OAFA,MAEA,IAAA,KAAA,aAAA,CAAA,MAAA,GAAA,GAAA,EAAA;AACA,aAAA,KAAA,GAAA,oDAAA;AACA,OAFA,MAEA;AACA,YAAA,QAAA,GAAA,iBAAA;AACA,YAAA,MAAA,GAAA,MAAA;;AACA,YAAA,KAAA,IAAA,KAAA,SAAA,EAAA;AACA,UAAA,QAAA,cAAA,KAAA,IAAA,MAAA;AACA;;AAEA,QAAA,UAAA,CAAA,QAAA,EAAA,MAAA,EAAA;AAAA,UAAA,OAAA,EAAA,KAAA;AAAA,SAAA,CAAA,CACA,IADA,CACA,UAAA,aAAA,EAAA;AACA,UAAA,KAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AACA,YAAA,IAAA,EAAA,UADA;AAEA,YAAA,MAAA,EAAA;AAAA,cAAA,IAAA,EAAA,aAAA,CAAA;AAAA;AAFA,WAAA;AAIA,SANA;AAOA;AACA;AArBA,GAhBA;AAwCA,EAAA,gBAxCA,4BAwCA,EAxCA,EAwCA,IAxCA,EAwCA,IAxCA,EAwCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,EAAA,CAAA,MAAA,CAAA,IAAA,KAAA,SADA;AAAA;AAAA;AAAA;;AAEA,cAAA,QAFA,4BAEA,EAAA,CAAA,MAAA,CAAA,IAFA;AAAA;AAAA,qBAGA,UAAA,CAAA,QAAA,CAHA;;AAAA;AAGA,cAAA,IAHA;AAAA,+CAIA,IAAA,CAAA,UAAA,EAAA,EAAA;AACA,gBAAA,EAAA,CAAA,aAAA,GAAA,IAAA,CAAA,OAAA;AACA,eAFA,CAJA;;AAAA;AAAA,+CAQA,IAAA,EARA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA,GAlDA;AAoDA,EAAA,OApDA,qBAoDA;AACA,IAAA,QAAA,CAAA,KAAA,GAAA,uBAAA;AACA;AAtDA,CAAA","sourcesContent":["<template>\r\n\r\n  <div class=\"container mt-2\">\r\n    <h1 class=\"mb-2\">  Ask Question </h1>\r\n    <form @submit.prevent=\"onSubmit\">\r\n      <textarea\r\n            v-model=\"question_body\"\r\n            rows=\"3\"\r\n            class=\"form-control\"\r\n            placeholder=\"What do you want to ask?\"\r\n      > </textarea>\r\n      <br>\r\n      <button\r\n            type=\"submit\"\r\n            class=\"btn btn-success\"\r\n       >Publish</button>\r\n    </form>\r\n\r\n    <p v-if=\"error\" class=\"muted mt-2\" > {{ error }}</p>\r\n  </div>\r\n\r\n</template>\r\n\r\n\r\n<script>\r\nimport { apiService } from \"@/common/api.service.js\";\r\n\r\nexport default {\r\n  name: \"QuestionEditor\",\r\n  props: {\r\n    slug: {\r\n      type: String,\r\n      required: true,\r\n    },\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      question_body: null,\r\n      error: null\r\n    }\r\n  },\r\n\r\n  methods :{\r\n    onSubmit(){\r\n      if(!this.question_body){\r\n          this.error = \"You can't send an empty question!\";\r\n      } else if (this.question_body.length > 240) {\r\n          this.error = \"Ensure this field has no more than 240 characters!\";\r\n      } else {\r\n          let endpoint = \"/api/questions/\";\r\n          let method = \"POST\";\r\n          if (this.slug !== undefined) {\r\n            endpoint += `${ this.slug }/` ;\r\n          }\r\n\r\n          apiService(endpoint, method, { content: this.question_body })\r\n              .then(question_data => {\r\n                  this.$router.push({\r\n                    name:'question',\r\n                    params: { slug: question_data.slug }\r\n                  })\r\n              })\r\n          }\r\n        }\r\n  },\r\n\r\n  async beforeRouteEnter ( to, from, next ) {\r\n    if (to.params.slug !== undefined) {\r\n      let endpoint = `/api/questions/${ to.params.slug }/`;\r\n      let data = await apiService(endpoint);\r\n      return next( vm => {\r\n        vm.question_body = data.content\r\n      })\r\n    } else{\r\n      return next()\r\n    }\r\n  },\r\n\r\n  created(){\r\n    document.title = \"Editor - QuestionTime\";\r\n  }\r\n}\r\n\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"],"sourceRoot":"src/views"}]}